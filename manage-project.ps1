# üöÄ –ì–õ–ê–í–ù–´–ô –ú–ï–ù–ï–î–ñ–ï–† –ü–†–û–ï–ö–¢–ê DUBAI_MVP
# –ï–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π

param(
    [Parameter(Mandatory=$true)]
    [ValidateSet("check", "deploy", "test", "dev", "prod", "fix", "watch", "status")]
    [string]$Action,
    
    [switch]$AutoFix = $false,
    [switch]$Force = $false
)

$ErrorActionPreference = "Stop"

Write-Host "üöÄ DUBAI MVP PROJECT MANAGER" -ForegroundColor Green
Write-Host "============================" -ForegroundColor Green
Write-Host "–î–µ–π—Å—Ç–≤–∏–µ: $Action" -ForegroundColor Cyan

switch ($Action) {
    "check" {
        Write-Host "üîç –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏..." -ForegroundColor Cyan
        & ".\scripts\comprehensive-check.ps1"
        
        if ($LASTEXITCODE -ne 0 -and $AutoFix) {
            Write-Host "üîß –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è..." -ForegroundColor Yellow
            & ".\scripts\auto-deploy-manager.ps1" -MaxRetries 3
        }
    }
    
    "deploy" {
        Write-Host "üöÇ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è..." -ForegroundColor Cyan
        & ".\scripts\auto-deploy-manager.ps1" -MaxRetries 5
    }
    
    "test" {
        Write-Host "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..." -ForegroundColor Cyan
        & ".\scripts\railway-health-check.ps1"
        
        Write-Host "`nüîó –°—Å—ã–ª–∫–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:" -ForegroundColor Yellow
        Write-Host "Backend: https://workerproject-production.up.railway.app/api/health/" -ForegroundColor White
        Write-Host "Frontend: https://frontend-production-5c48.up.railway.app/auth" -ForegroundColor White
        Write-Host "OTP Test: –í–≤–µ–¥–∏—Ç–µ kbalodk@gmail.com –∏ –Ω–∞–∂–º–∏—Ç–µ SIGN UP" -ForegroundColor White
    }
    
    "dev" {
        Write-Host "üíª –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..." -ForegroundColor Cyan
        
        if (Get-Command docker-compose -ErrorAction SilentlyContinue) {
            Write-Host "üê≥ –ó–∞–ø—É—Å–∫ Docker Compose –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..." -ForegroundColor Yellow
            docker-compose -f docker-compose.dev.yml up --build
        } else {
            Write-Host "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
            Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop: https://www.docker.com/products/docker-desktop" -ForegroundColor Yellow
        }
    }
    
    "prod" {
        Write-Host "üè≠ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É..." -ForegroundColor Cyan
        
        # –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        Write-Host "1. –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..." -ForegroundColor Yellow
        & ".\scripts\comprehensive-check.ps1"
        
        if ($LASTEXITCODE -ne 0 -and -not $Force) {
            Write-Host "‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ -Force –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è" -ForegroundColor Red
            exit 1
        }
        
        # –î–µ–ø–ª–æ–π
        Write-Host "2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π..." -ForegroundColor Yellow
        & ".\scripts\auto-deploy-manager.ps1" -MaxRetries 3
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        Write-Host "3. –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..." -ForegroundColor Yellow
        & ".\scripts\railway-health-check.ps1"
        
        Write-Host "üéâ –ü—Ä–æ–¥–∞–∫—à–µ–Ω –≥–æ—Ç–æ–≤!" -ForegroundColor Green
    }
    
    "fix" {
        Write-Host "üîß –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è..." -ForegroundColor Cyan
        & ".\scripts\auto-deploy-manager.ps1" -MaxRetries 10
    }
    
    "watch" {
        Write-Host "üëÅÔ∏è –ó–∞–ø—É—Å–∫ —Ä–µ–∂–∏–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..." -ForegroundColor Cyan
        & ".\scripts\auto-deploy-manager.ps1" -WatchMode -WaitSeconds 40
    }
    
    "status" {
        Write-Host "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞..." -ForegroundColor Cyan
        
        # Backend
        Write-Host "`nBackend API:" -ForegroundColor White
        try {
            $response = Invoke-RestMethod -Uri "https://workerproject-production.up.railway.app/api/health/" -Method GET -TimeoutSec 10
            Write-Host "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
            Write-Host "   –°—Ç–∞—Ç—É—Å: $($response.status)" -ForegroundColor Gray
            Write-Host "   –°–µ—Ä–≤–∏—Å: $($response.service)" -ForegroundColor Gray
        } catch {
            Write-Host "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
        }
        
        # Frontend
        Write-Host "`nFrontend:" -ForegroundColor White
        try {
            $frontendResponse = Invoke-WebRequest -Uri "https://frontend-production-5c48.up.railway.app/" -Method GET -TimeoutSec 10
            Write-Host "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
        } catch {
            Write-Host "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
        }
        
        # Railway —Å—Ç–∞—Ç—É—Å
        Write-Host "`nRailway:" -ForegroundColor White
        try {
            $railwayStatus = npx --yes @railway/cli@latest status 2>&1
            if ($railwayStatus -match "Project:") {
                Write-Host "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω" -ForegroundColor Green
            } else {
                Write-Host "‚ùå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω" -ForegroundColor Red
            }
        } catch {
            Write-Host "‚ùå CLI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
        }
        
        Write-Host "`nüîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:" -ForegroundColor Yellow
        Write-Host "Backend: https://workerproject-production.up.railway.app/api/health/" -ForegroundColor White
        Write-Host "Frontend: https://frontend-production-5c48.up.railway.app/auth" -ForegroundColor White
        Write-Host "Railway: https://railway.app/" -ForegroundColor White
    }
}

Write-Host "`nüèÅ –û–ø–µ—Ä–∞—Ü–∏—è '$Action' –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green

# –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
Write-Host "`nüí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor Yellow
Write-Host "  .\manage-project.ps1 check     # –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞" -ForegroundColor White
Write-Host "  .\manage-project.ps1 deploy    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π" -ForegroundColor White
Write-Host "  .\manage-project.ps1 test      # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã" -ForegroundColor White
Write-Host "  .\manage-project.ps1 dev       # –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞" -ForegroundColor White
Write-Host "  .\manage-project.ps1 prod      # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É" -ForegroundColor White
Write-Host "  .\manage-project.ps1 fix       # –ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ" -ForegroundColor White
Write-Host "  .\manage-project.ps1 watch     # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥" -ForegroundColor White
Write-Host "  .\manage-project.ps1 status    # –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å" -ForegroundColor White
