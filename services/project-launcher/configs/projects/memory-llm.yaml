name: "Memory LLM Service"
description: "Java сервис для работы с памятью LLM с векторными эмбеддингами"
type: "ai-service"
category: "artificial-intelligence"
priority: "critical"

# Docker Compose конфигурация
compose:
  file: "../../../docker-compose.monitoring.yml"
  profile: "memory-llm"
  working_dir: "../../../"

# Настройки окружения
environment: "production"
auto_start: true
auto_restart: true
restart_policy: "unless-stopped"

# Health Check
health_check:
  url: "http://localhost:8081/actuator/health"
  interval: 30
  timeout: 15
  retries: 3
  method: "GET"
  expected_status: 200

# Ресурсы
resources:
  cpu_limit: "2.0"
  memory_limit: "4GB"
  disk_limit: "20GB"
  network_mode: "bridge"

# Порты
ports:
  - "8081:8080"  # Memory Service
  - "5433:5432"  # PostgreSQL
  - "6379:6379"  # Redis
  - "8080:80"    # Nginx
  - "9090:9090"  # Prometheus
  - "3003:3000"  # Grafana

# Переменные окружения
environment_variables:
  SPRING_PROFILES_ACTIVE: "production"
  SPRING_DATASOURCE_URL: "jdbc:postgresql://memory-postgres-production:5432/memory_llm"
  SPRING_DATASOURCE_USERNAME: "memoryuser"
  SPRING_DATASOURCE_PASSWORD: "${POSTGRES_PASSWORD}"
  MEMORY_API_KEY: "${MEMORY_API_KEY}"
  MEMORY_ADMIN_KEY: "${MEMORY_ADMIN_KEY}"
  CORS_ALLOWED_ORIGINS: "${CORS_ALLOWED_ORIGINS}"
  LIMITS_MAX_TEXT_LENGTH: "${LIMITS_MAX_TEXT_LENGTH:-10000}"
  LIMITS_MAX_BATCH_ITEMS: "${LIMITS_MAX_BATCH_ITEMS:-100}"
  LIMITS_MAX_TOPK: "${LIMITS_MAX_TOPK:-50}"
  LIMITS_COST_THRESHOLD: "${LIMITS_COST_THRESHOLD:-1000}"
  SPRING_FLYWAY_ENABLED: "${SPRING_FLYWAY_ENABLED:-true}"
  SPRING_REDIS_HOST: "memory-redis-production"
  SPRING_REDIS_PORT: "6379"

# Зависимости
dependencies:
  - "postgresql"
  - "redis"

# Мониторинг
monitoring:
  enabled: true
  metrics:
    - "cpu"
    - "memory"
    - "network"
    - "disk"
    - "response_time"
    - "error_rate"
    - "memory_operations"
    - "vector_search_performance"
  
  # Алерты
  alerts:
    - name: "High CPU Usage"
      condition: "cpu > 80%"
      action: "restart"
      cooldown: 300
      severity: "warning"
    
    - name: "High Memory Usage"
      condition: "memory > 85%"
      action: "restart"
      cooldown: 300
      severity: "warning"
    
    - name: "Service Unavailable"
      condition: "health_check_failed > 3"
      action: "restart"
      cooldown: 60
      severity: "critical"
    
    - name: "High Response Time"
      condition: "response_time > 5000ms"
      action: "scale_up"
      cooldown: 120
      severity: "warning"
    
    - name: "Memory Operations Failed"
      condition: "memory_operations_error_rate > 5%"
      action: "alert"
      cooldown: 60
      severity: "critical"

# Логирование
logging:
  level: "info"
  format: "json"
  retention: "90d"
  max_size: "500MB"
  
  # Фильтры
  filters:
    - "error"
    - "warn"
    - "info"
    - "debug"
  
  # Структурированные логи
  structured:
    enabled: true
    fields:
      - "timestamp"
      - "level"
      - "service"
      - "operation"
      - "user_id"
      - "memory_id"
      - "performance_metrics"

# Backup
backup:
  enabled: true
  schedule: "0 1 * * *"  # Ежедневно в 1:00
  retention: "30d"
  include:
    - "postgres_data"
    - "redis_data"
    - "configs"
  exclude:
    - "logs"
    - "temp"
  
  # Валидация backup
  validation:
    enabled: true
    checksum: true
    restore_test: true

# CI/CD
ci_cd:
  enabled: true
  auto_deploy: false  # Критичный сервис - ручное развертывание
  branch: "main"
  triggers:
    - "tag"
    - "manual"
  
  # Тестирование
  testing:
    unit_tests: true
    integration_tests: true
    e2e_tests: true
    performance_tests: true
  
  # Сборка
  build:
    command: "mvn clean package -DskipTests"
    artifacts: ["target/*.jar"]
    cache: ["~/.m2/repository"]

# Масштабирование
scaling:
  min_replicas: 2
  max_replicas: 5
  target_cpu_utilization: 60
  target_memory_utilization: 70
  
  # Автоскейлинг
  auto_scaling:
    enabled: true
    scale_up_threshold: 70
    scale_down_threshold: 30
    scale_up_cooldown: 300
    scale_down_cooldown: 600
  
  # Горизонтальное масштабирование
  horizontal:
    enabled: true
    load_balancer: "nginx"
    session_affinity: true

# Безопасность
security:
  # Сканирование уязвимостей
  vulnerability_scanning:
    enabled: true
    schedule: "0 4 * * *"  # Ежедневно в 4:00
    tools: ["owasp-dependency-check", "snyk"]
  
  # Секреты
  secrets:
    - "POSTGRES_PASSWORD"
    - "MEMORY_API_KEY"
    - "MEMORY_ADMIN_KEY"
    - "CORS_ALLOWED_ORIGINS"
  
  # Сетевая безопасность
  network:
    allowed_ips: ["127.0.0.1", "::1", "10.0.0.0/8"]
    firewall_rules:
      - port: 8081
        protocol: "tcp"
        source: "internal"
      - port: 5433
        protocol: "tcp"
        source: "internal"
      - port: 6379
        protocol: "tcp"
        source: "internal"
  
  # Шифрование
  encryption:
    data_at_rest: true
    data_in_transit: true
    tls_version: "1.3"

# Производительность
performance:
  # JVM настройки
  jvm_options:
    - "-Xms2g"
    - "-Xmx4g"
    - "-XX:+UseG1GC"
    - "-XX:MaxGCPauseMillis=200"
    - "-XX:+UseStringDeduplication"
  
  # Кэширование
  caching:
    redis: true
    local: true
    ttl: 3600
  
  # Connection Pool
  connection_pool:
    max_connections: 50
    min_idle: 10
    max_lifetime: 1800000

# Документация
documentation:
  readme: "../../../Java_Memory_LLM-master/README.md"
  api_docs: "http://localhost:8081/swagger-ui/"
  architecture: "../../../Java_Memory_LLM-master/architecture.puml"
  
  # Ссылки
  links:
    - name: "GitHub Repository"
      url: "https://github.com/dubai-project/java-memory-llm"
    - name: "API Documentation"
      url: "http://localhost:8081/docs"
    - name: "Health Check"
      url: "http://localhost:8081/actuator/health"
    - name: "Metrics"
      url: "http://localhost:8081/actuator/metrics"

# Теги для поиска и фильтрации
tags:
  - "ai-service"
  - "java"
  - "spring-boot"
  - "vector-database"
  - "embeddings"
  - "memory"
  - "llm"
  - "postgresql"
  - "redis"
  - "production"

# Метаданные
metadata:
  created: "2025-01-16"
  updated: "2025-01-16"
  version: "1.0.0"
  maintainer: "ai-team@company.com"
  status: "active"
  sla: "99.9%"
  maintenance_window: "Sunday 02:00-04:00 UTC"
