# Dubai MVP - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
Write-Host "üîç –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –ú–ê–†–®–†–£–¢–û–í" -ForegroundColor Green
Write-Host "=========================" -ForegroundColor Green

$frontendUrl = "https://frontend-production-261c.up.railway.app"
$backendUrl = "https://dubai.up.railway.app"

Write-Host "`nüì± FRONTEND –ú–ê–†–®–†–£–¢–´:" -ForegroundColor Cyan

$frontendRoutes = @(
    "/",
    "/dashboard", 
    "/auth",
    "/analytics",
    "/reports",
    "/payment",
    "/pricing",
    "/policy",
    "/profile"
)

foreach ($route in $frontendRoutes) {
    try {
        $response = Invoke-WebRequest -Uri "$frontendUrl$route" -Method GET -TimeoutSec 5
        $status = if ($response.StatusCode -eq 200) { "‚úÖ 200 OK" } else { "‚ö†Ô∏è $($response.StatusCode)" }
        Write-Host "  $route - $status" -ForegroundColor $(if ($response.StatusCode -eq 200) { "Green" } else { "Yellow" })
    } catch {
        $statusCode = $_.Exception.Response.StatusCode.value__
        Write-Host "  $route - ‚ùå $statusCode" -ForegroundColor Red
    }
}

Write-Host "`nüîó API –ú–ê–†–®–†–£–¢–´ (GET):" -ForegroundColor Cyan

$apiGetRoutes = @(
    "/api/health/",
    "/api/csrf/",
    "/api/stats/", 
    "/api/properties/",
    "/api/areas/",
    "/api/buildings/",
    "/api/auth/google/login/",
    "/api/profile/me/"
)

foreach ($route in $apiGetRoutes) {
    try {
        $response = Invoke-RestMethod -Uri "$backendUrl$route" -Method GET -TimeoutSec 5
        Write-Host "  $route - ‚úÖ 200 OK" -ForegroundColor Green
    } catch {
        $statusCode = $_.Exception.Response.StatusCode.value__
        $status = if ($statusCode -eq 401) { "üîí 401 (auth required)" }
                 elseif ($statusCode -eq 404) { "‚ùå 404 (not found)" }
                 else { "‚ö†Ô∏è $statusCode" }
        Write-Host "  $route - $status" -ForegroundColor $(if ($statusCode -eq 401) { "Yellow" } else { "Red" })
    }
}

Write-Host "`nüîó API –ü–†–û–ö–°–ò–†–û–í–ê–ù–ò–ï (—á–µ—Ä–µ–∑ frontend):" -ForegroundColor Cyan

foreach ($route in $apiGetRoutes) {
    try {
        $response = Invoke-RestMethod -Uri "$frontendUrl$route" -Method GET -TimeoutSec 5
        Write-Host "  $route - ‚úÖ Proxy OK" -ForegroundColor Green
    } catch {
        $statusCode = $_.Exception.Response.StatusCode.value__
        $status = if ($statusCode -eq 401) { "üîí 401 (auth required)" }
                 elseif ($statusCode -eq 404) { "‚ùå 404 (not found)" }
                 else { "‚ö†Ô∏è $statusCode" }
        Write-Host "  $route - $status" -ForegroundColor $(if ($statusCode -eq 401) { "Yellow" } else { "Red" })
    }
}

Write-Host "`nüí° –ò–¢–û–ì–ò:" -ForegroundColor Cyan
Write-Host "‚úÖ Frontend URL: $frontendUrl" -ForegroundColor Green
Write-Host "‚úÖ Backend URL: $backendUrl" -ForegroundColor Green
Write-Host "üîó –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è OTP: $frontendUrl/auth" -ForegroundColor Yellow
Write-Host "üîó –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Google OAuth: $frontendUrl/auth" -ForegroundColor Yellow
