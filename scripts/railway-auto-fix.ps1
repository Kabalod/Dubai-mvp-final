# Railway Auto-Fix Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç –ª–æ–≥–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

param(
    [string]$ServiceName = "workerproject-production"
)

Write-Host "üöÄ Railway Auto-Fix Monitor –∑–∞–ø—É—â–µ–Ω..." -ForegroundColor Green
Write-Host "–°–µ—Ä–≤–∏—Å: $ServiceName" -ForegroundColor Cyan

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤
function Get-RailwayLogs {
    Write-Host "üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤..." -ForegroundColor Yellow
    $logs = npx --yes @railway/cli@latest logs --service $ServiceName 2>&1
    return $logs -join "`n"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function Find-MissingDependencies {
    param([string]$LogText)
    
    $dependencies = @()
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –º–æ–¥—É–ª–µ–π
    $patterns = @{
        "No module named '([^']+)'" = '$1'
        "ModuleNotFoundError: No module named '([^']+)'" = '$1'
        "ImportError: No module named ([^\s]+)" = '$1'
    }
    
    foreach ($pattern in $patterns.Keys) {
        $matches = [regex]::Matches($LogText, $pattern)
        foreach ($match in $matches) {
            $module = $match.Groups[1].Value
            $dependencies += $module
        }
    }
    
    return $dependencies | Sort-Object | Get-Unique
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ Dockerfile
function Add-DependencyToDockerfile {
    param([string]$Dependency)
    
    $dockerfilePath = "apps/realty-main/Dockerfile"
    
    if (!(Test-Path $dockerfilePath)) {
        Write-Host "‚ùå Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω: $dockerfilePath" -ForegroundColor Red
        return $false
    }
    
    $content = Get-Content $dockerfilePath -Raw
    
    # –ù–∞–π—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É —Å pip install
    $lastPipLine = ($content -split "`n" | Where-Object { $_ -match "pip install.*--no-cache-dir" })[-1]
    
    if ($lastPipLine) {
        # –î–æ–±–∞–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–µ pip install
        $newLine = $lastPipLine.TrimEnd() + " $Dependency"
        $content = $content -replace [regex]::Escape($lastPipLine), $newLine
        
        Set-Content $dockerfilePath $content -NoNewline
        Write-Host "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: $Dependency" -ForegroundColor Green
        return $true
    }
    
    return $false
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞ –∏ –ø—É—à–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
function Deploy-Fix {
    param([string[]]$Dependencies)
    
    $depList = $Dependencies -join ", "
    $commitMessage = "fix(deps): auto-add missing dependencies: $depList"
    
    Write-Host "üì§ –ö–æ–º–º–∏—Ç –∏ –ø—É—à –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π..." -ForegroundColor Yellow
    
    git add -A
    git commit -m $commitMessage
    git push
    
    Write-Host "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Railway" -ForegroundColor Green
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
$maxAttempts = 10
$attempt = 1

while ($attempt -le $maxAttempts) {
    Write-Host "`nüîç –ü–æ–ø—ã—Ç–∫–∞ $attempt –∏–∑ $maxAttempts" -ForegroundColor Cyan
    
    # –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏
    $logs = Get-RailwayLogs
    
    # –ù–∞–π—Ç–∏ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    $missingDeps = Find-MissingDependencies -LogText $logs
    
    if ($missingDeps.Count -eq 0) {
        Write-Host "‚úÖ –ù–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!" -ForegroundColor Green
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å API
        try {
            $response = Invoke-RestMethod -Uri "https://workerproject-production.up.railway.app/api/health/" -Method GET -TimeoutSec 10
            Write-Host "üéâ Backend —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!" -ForegroundColor Green
            Write-Host "–û—Ç–≤–µ—Ç API: $($response | ConvertTo-Json)" -ForegroundColor Cyan
            break
        }
        catch {
            Write-Host "‚ö†Ô∏è API –ø–æ–∫–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –∂–¥—ë–º..." -ForegroundColor Yellow
        }
    }
    else {
        Write-Host "‚ùå –ù–∞–π–¥–µ–Ω—ã –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:" -ForegroundColor Red
        $missingDeps | ForEach-Object { Write-Host "  - $_" -ForegroundColor Yellow }
        
        # –î–æ–±–∞–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ Dockerfile
        $added = @()
        foreach ($dep in $missingDeps) {
            if (Add-DependencyToDockerfile -Dependency $dep) {
                $added += $dep
            }
        }
        
        if ($added.Count -gt 0) {
            Deploy-Fix -Dependencies $added
            Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ (3 –º–∏–Ω—É—Ç—ã)..." -ForegroundColor Yellow
            Start-Sleep -Seconds 180
        }
    }
    
    $attempt++
    Start-Sleep -Seconds 30
}

if ($attempt -gt $maxAttempts) {
    Write-Host "‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫" -ForegroundColor Red
}

Write-Host "`nüèÅ Railway Auto-Fix Monitor –∑–∞–≤–µ—Ä—à—ë–Ω" -ForegroundColor Green
