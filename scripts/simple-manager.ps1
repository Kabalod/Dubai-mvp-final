# üöÄ Dubai Project Manager - –ü—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è
# –ï–¥–∏–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞

param(
    [string]$Action = "status",
    [string]$Service = "all"
)

$ErrorActionPreference = 'Stop'

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$Colors = @{
    Red = 'Red'
    Green = 'Green'
    Yellow = 'Yellow'
    Cyan = 'Cyan'
    White = 'White'
}

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
function Write-Header {
    param([string]$Message)
    Write-Host "`nüöÄ $Message" -ForegroundColor $Colors.Cyan
    Write-Host ("=" * ($Message.Length + 4)) -ForegroundColor $Colors.Cyan
}

function Write-Status {
    param([string]$Message)
    Write-Host "‚úÖ $Message" -ForegroundColor $Colors.Green
}

function Write-Warning {
    param([string]$Message)
    Write-Host "‚ö†Ô∏è  $Message" -ForegroundColor $Colors.Yellow
}

function Write-Error {
    param([string]$Message)
    Write-Host "‚ùå $Message" -ForegroundColor $Colors.Red
}

function Write-Info {
    param([string]$Message)
    Write-Host "‚ÑπÔ∏è  $Message" -ForegroundColor $Colors.White
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
$Services = @{
    core = @{
        name = "Core Services"
        compose_file = "docker-compose.core.yml"
        ports = @(8000, 8001, 8002)
        description = "–û—Å–Ω–æ–≤–Ω—ã–µ –±–∏–∑–Ω–µ—Å-—Å–µ—Ä–≤–∏—Å—ã (–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞)"
    }
    ai = @{
        name = "AI Services"
        compose_file = "docker-compose.ai.yml"
        ports = @(8081, 8082, 8083)
        description = "–ò–ò —Å–µ—Ä–≤–∏—Å—ã (–ø–∞–º—è—Ç—å, –∞–≥–µ–Ω—Ç—ã, ML –º–æ–¥–µ–ª–∏)"
    }
    frontend = @{
        name = "Frontend"
        compose_file = "docker-compose.frontend.yml"
        ports = @(3000, 3001, 3002)
        description = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
    }
    infrastructure = @{
        name = "Infrastructure"
        compose_file = "docker-compose.infrastructure.yml"
        ports = @(5432, 6379, 8080)
        description = "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –∫—ç—à, API gateway"
    }
    monitoring = @{
        name = "Monitoring"
        compose_file = "docker-compose.monitoring.yml"
        ports = @(9090, 3001, 5601)
        description = "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, –º–µ—Ç—Ä–∏–∫–∏"
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
function Test-Docker {
    try {
        $null = docker --version
        Write-Status "Docker –Ω–∞–π–¥–µ–Ω"
        return $true
    }
    catch {
        Write-Error "Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop"
        return $false
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
function Test-DockerCompose {
    try {
        $null = docker compose version
        Write-Status "Docker Compose –Ω–∞–π–¥–µ–Ω"
        return $true
    }
    catch {
        Write-Error "Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return $false
    }
}

# –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
function Get-ServiceStatus {
    Write-Header "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ Dubai Project"
    
    foreach ($serviceName in $Services.Keys) {
        $service = $Services[$serviceName]
        Write-Host "`nüìä $($service.name)" -ForegroundColor $Colors.Cyan
        Write-Host "   –û–ø–∏—Å–∞–Ω–∏–µ: $($service.description)" -ForegroundColor $Colors.White
        Write-Host "   –ü–æ—Ä—Ç: $($service.ports -join ', ')" -ForegroundColor $Colors.White
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        $composePath = Join-Path $PSScriptRoot "..\infrastructure\docker\$($service.compose_file)"
        if (Test-Path $composePath) {
            Write-Host "   üìÅ Compose —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω" -ForegroundColor $Colors.Green
        }
        else {
            Write-Host "   üìÅ Compose —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor $Colors.Yellow
        }
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
function Main {
    Write-Header "Dubai Project Manager"
    Write-Host "–î–µ–π—Å—Ç–≤–∏–µ: $Action" -ForegroundColor $Colors.Yellow
    Write-Host "–°–µ—Ä–≤–∏—Å: $Service" -ForegroundColor $Colors.Yellow
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if (-not (Test-Docker)) { return }
    if (-not (Test-DockerCompose)) { return }
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
    switch ($Action) {
        "status" {
            Get-ServiceStatus
        }
        default {
            Write-Info "–î–µ–π—Å—Ç–≤–∏–µ '$Action' –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ"
            Write-Info "–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è: status"
        }
    }
}

# –ó–∞–ø—É—Å–∫
Main
