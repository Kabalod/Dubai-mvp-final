# üîç Dubai Project - Environment Variables Check
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ pre-commit hooks

param(
    [switch]$Verbose
)

$ErrorActionPreference = 'Stop'

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$Colors = @{
    Red = 'Red'
    Green = 'Green'
    Yellow = 'Yellow'
    Blue = 'Blue'
    Cyan = 'Cyan'
    Default = 'White'
}

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
function Write-Status {
    param([string]$Message)
    Write-Host "‚úÖ $Message" -ForegroundColor $Colors.Green
}

function Write-Warning {
    param([string]$Message)
    Write-Host "‚ö†Ô∏è  $Message" -ForegroundColor $Colors.Yellow
}

function Write-Error {
    param([string]$Message)
    Write-Host "‚ùå $Message" -ForegroundColor $Colors.Red
}

function Write-Info {
    param([string]$Message)
    Write-Host "‚ÑπÔ∏è  $Message" -ForegroundColor $Colors.Default
}

function Write-Debug {
    param([string]$Message)
    if ($Verbose) {
        Write-Host "üîç $Message" -ForegroundColor $Colors.Blue
    }
}

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Dubai Project..." -ForegroundColor Cyan

# –¢—Ä–µ–±—É–µ–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
$requiredEnvVars = @{
    "Development" = @{
        "DATABASE_URL" = "postgresql://user:pass@localhost:5432/dubai_dev"
        "REDIS_URL" = "redis://localhost:6379/0"
        "SECRET_KEY" = "your-secret-key-here"
        "DEBUG" = "True"
        "ALLOWED_HOSTS" = "localhost,127.0.0.1"
    }
    "Production" = @{
        "DATABASE_URL" = "postgresql://user:pass@db:5432/dubai_prod"
        "REDIS_URL" = "redis://redis:6379/0"
        "SECRET_KEY" = "CHANGE_ME_IN_PRODUCTION"
        "DEBUG" = "False"
        "ALLOWED_HOSTS" = "your-domain.com"
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ .env
function Test-EnvFiles {
    Write-Info "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    $issues = 0
    $missingFiles = @()
    
    foreach ($env in $requiredEnvVars.Keys) {
        $envFile = "env/.env.$($env.ToLower())"
        
        if (-not (Test-Path $envFile)) {
            Write-Warning "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: $envFile"
            $missingFiles += $envFile
            $issues++
        } else {
            Write-Debug "–ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: $envFile"
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
            try {
                $envContent = Get-Content $envFile -Raw
                $envVars = @{}
                
                # –ü–∞—Ä—Å–∏–Ω–≥ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
                foreach ($line in ($envContent -split "`n")) {
                    if ($line -match "^([^#][^=]+)=(.*)$") {
                        $key = $matches[1].Trim()
                        $value = $matches[2].Trim()
                        $envVars[$key] = $value
                    }
                }
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±—É–µ–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
                foreach ($requiredVar in $requiredEnvVars[$env].Keys) {
                    if (-not $envVars.ContainsKey($requiredVar)) {
                        Write-Warning "–í $envFile –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: $requiredVar"
                        $issues++
                    } else {
                        $actualValue = $envVars[$requiredVar]
                        $expectedValue = $requiredEnvVars[$env][$requiredVar]
                        
                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ placeholder –∑–Ω–∞—á–µ–Ω–∏—è
                        if ($actualValue -match "CHANGE_ME|your-|placeholder|example") {
                            Write-Warning "–í $envFile –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è $requiredVar —Å–æ–¥–µ—Ä–∂–∏—Ç placeholder: $actualValue"
                            $issues++
                        }
                        
                        Write-Debug "  ‚úÖ $requiredVar = $actualValue"
                    }
                }
                
            } catch {
                Write-Warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å $envFile: $_"
                $issues++
            }
        }
    }
    
    if ($issues -eq 0) {
        Write-Status "–§–∞–π–ª—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã"
    } else {
        Write-Warning "–ù–∞–π–¥–µ–Ω–æ $issues –ø—Ä–æ–±–ª–µ–º —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
        if ($missingFiles.Count -gt 0) {
            Write-Host ""
            Write-Host "üìã –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã:" -ForegroundColor Yellow
            foreach ($file in $missingFiles) {
                Write-Host "  - $file" -ForegroundColor $Colors.Yellow
            }
        }
    }
    
    return $issues
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env.example
function Test-EnvExample {
    Write-Info "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ .env.example..."
    
    $issues = 0
    
    if (Test-Path ".env.example") {
        try {
            $exampleContent = Get-Content ".env.example" -Raw
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            if ($exampleContent -notmatch "#") {
                Write-Warning ".env.example –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏"
                $issues++
            }
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ–ø–∏—Å–∞–Ω–∏—è
            if ($exampleContent -notmatch "##") {
                Write-Warning ".env.example –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"
                $issues++
            }
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            $lines = $exampleContent -split "`n"
            $varLines = 0
            $commentLines = 0
            
            foreach ($line in $lines) {
                if ($line -match "^[^#][^=]+=") {
                    $varLines++
                } elseif ($line -match "^#") {
                    $commentLines++
                }
            }
            
            if ($varLines -eq 0) {
                Write-Warning ".env.example –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ"
                $issues++
            }
            
            if ($commentLines -eq 0) {
                Write-Warning ".env.example –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏"
                $issues++
            }
            
            Write-Debug "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: $varLines, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: $commentLines"
            
        } catch {
            Write-Warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å .env.example: $_"
            $issues++
        }
    } else {
        Write-Warning "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç .env.example"
        $issues++
    }
    
    if ($issues -eq 0) {
        Write-Status ".env.example –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
    }
    
    return $issues
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
function Test-Security {
    Write-Info "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    $issues = 0
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –∫–æ–¥–µ
    $sensitivePatterns = @(
        "password.*=.*['\""][^'\""]+['\""]",
        "secret.*=.*['\""][^'\""]+['\""]",
        "key.*=.*['\""][^'\""]+['\""]",
        "token.*=.*['\""][^'\""]+['\""]"
    )
    
    $codeFiles = @(
        "*.py", "*.js", "*.ts", "*.java", "*.yml", "*.yaml"
    )
    
    foreach ($pattern in $codeFiles) {
        $files = Get-ChildItem -Path . -Filter $pattern -Recurse | Where-Object { 
            $_.FullName -notlike "*\node_modules\*" -and 
            $_.FullName -notlike "*\venv\*" -and
            $_.FullName -notlike "*\__pycache__\*"
        }
        
        foreach ($file in $files) {
            try {
                $content = Get-Content $file.FullName -Raw
                
                foreach ($sensitivePattern in $sensitivePatterns) {
                    if ($content -match $sensitivePattern) {
                        Write-Warning "–í–æ–∑–º–æ–∂–Ω—ã–π —Å–µ–∫—Ä–µ—Ç –≤ $($file.Name): $($matches[0])"
                        $issues++
                    }
                }
            } catch {
                # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —á—Ç–µ–Ω–∏—è
            }
        }
    }
    
    if ($issues -eq 0) {
        Write-Status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–∞"
    } else {
        Write-Warning "–ù–∞–π–¥–µ–Ω–æ $issues –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    }
    
    return $issues
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Main {
    $startTime = Get-Date
    $totalIssues = 0
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ .env
    $envIssues = Test-EnvFiles
    $totalIssues += $envIssues
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env.example
    $exampleIssues = Test-EnvExample
    $totalIssues += $exampleIssues
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    $securityIssues = Test-Security
    $totalIssues += $securityIssues
    
    $endTime = Get-Date
    $duration = $endTime - $startTime
    
    Write-Host ""
    Write-Host "==================================" -ForegroundColor Cyan
    if ($totalIssues -eq 0) {
        Write-Status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
        exit 0
    } else {
        Write-Error "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏!"
        Write-Host "–ù–∞–π–¥–µ–Ω–æ $totalIssues –ø—Ä–æ–±–ª–µ–º" -ForegroundColor $Colors.Red
        Write-Host ""
        Write-Host "üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:" -ForegroundColor Yellow
        Write-Host "1. –°–æ–∑–¥–∞–π—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ .env —Ñ–∞–π–ª—ã" -ForegroundColor White
        Write-Host "2. –î–æ–±–∞–≤—å—Ç–µ –≤—Å–µ —Ç—Ä–µ–±—É–µ–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ" -ForegroundColor White
        Write-Host "3. –ó–∞–º–µ–Ω–∏—Ç–µ placeholder –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ" -ForegroundColor White
        Write-Host "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö" -ForegroundColor White
        Write-Host "5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–Ω–æ–≤–∞" -ForegroundColor White
        Write-Host ""
        Write-Host "‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $($duration.TotalSeconds.ToString('F2')) —Å–µ–∫" -ForegroundColor Cyan
        exit 1
    }
}

# –ó–∞–ø—É—Å–∫
Main
