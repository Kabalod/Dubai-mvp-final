#!/bin/bash

# üöÄ Dubai Project - Lint Documentation
# –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏

set -e

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Dubai Project..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è markdownlint
check_markdownlint() {
    if command -v markdownlint &> /dev/null; then
        print_status "Markdownlint –Ω–∞–π–¥–µ–Ω"
        return 0
    else
        print_warning "Markdownlint –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: npm install -g markdownlint-cli"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ markdown —Ñ–∞–π–ª–æ–≤
lint_markdown() {
    if check_markdownlint; then
        echo "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ Markdown —Ñ–∞–π–ª–æ–≤..."
        markdownlint '**/*.md' --ignore .markdownlintignore
        print_status "Markdown –ª–∏–Ω—Ç–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω"
    else
        print_warning "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º Markdown –ª–∏–Ω—Ç–∏–Ω–≥"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
check_headers() {
    echo "üè∑Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ H1 –∑–∞–≥–æ–ª–æ–≤–∫–∏
    h1_count=$(grep -r "^# " . --include="*.md" | wc -l)
    if [ "$h1_count" -gt 0 ]; then
        print_warning "–ù–∞–π–¥–µ–Ω–æ $h1_count H1 –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –Ω–∞ —Ñ–∞–π–ª)"
        grep -r "^# " . --include="*.md" | head -5
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–µ—Ä–∞—Ä—Ö–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤..."
    for file in $(find . -name "*.md" -not -path "./site/*"); do
        if [ -f "$file" ]; then
            # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ H1 -> H3 (–ø—Ä–æ–ø—É—â–µ–Ω H2)
            if grep -q "^### " "$file" && ! grep -q "^## " "$file"; then
                print_warning "–§–∞–π–ª $file: –Ω–∞–π–¥–µ–Ω H3 –±–µ–∑ H2"
            fi
        fi
    done
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–æ–∫
check_links() {
    echo "üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Å—ã–ª–æ–∫..."
    
    # –ü–æ–∏—Å–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ —Å–ª–æ–º–∞–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    broken_links=0
    
    for file in $(find . -name "*.md" -not -path "./site/*"); do
        if [ -f "$file" ]; then
            # –ü–æ–∏—Å–∫ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
            while IFS= read -r line; do
                if [[ $line =~ \[([^\]]+)\]\(([^)]+)\) ]]; then
                    link="${BASH_REMATCH[2]}"
                    if [[ $link =~ ^\./ ]]; then
                        target_file=$(dirname "$file")/${link#./}
                        if [ ! -f "$target_file" ]; then
                            print_warning "–°–ª–æ–º–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –≤ $file: $link"
                            ((broken_links++))
                        fi
                    fi
                fi
            done < "$file"
        fi
    done
    
    if [ $broken_links -eq 0 ]; then
        print_status "–í—Å–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã"
    else
        print_warning "–ù–∞–π–¥–µ–Ω–æ $broken_links –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ —Å–ª–æ–º–∞–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤
check_structure() {
    echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
    
    required_files=(
        "README.md"
        "OVERVIEW.md"
        "NAVIGATION.md"
        "CONTRIBUTING.md"
        "GPT_RULES.md"
        "CURSOR_RULES.md"
    )
    
    missing_files=0
    for file in "${required_files[@]}"; do
        if [ ! -f "$file" ]; then
            print_error "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª: $file"
            ((missing_files++))
        fi
    done
    
    if [ $missing_files -eq 0 ]; then
        print_status "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
    else
        print_warning "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç $missing_files –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
    echo "=================================="
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_structure
    lint_markdown
    check_headers
    check_links
    
    echo "=================================="
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    
    echo ""
    echo "üìö –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã"
    echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"
    echo "3. –°–ª–µ–¥—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞–º –∏–∑ CONTRIBUTING.md"
    echo "4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ GPT_RULES.md –¥–ª—è AI –º–æ–¥–µ–ª–µ–π"
    echo "5. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ CURSOR_RULES.md –¥–ª—è Cursor IDE"
}

# –ó–∞–ø—É—Å–∫
main "$@"
