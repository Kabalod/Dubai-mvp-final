"""
–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ Django settings –¢–û–õ–¨–ö–û –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
–í–µ—Ä—Å–∏—è: Railway MVP Auth Only - –° –£–õ–£–ß–®–ï–ù–ù–û–ô –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨–Æ
"""
import os
from pathlib import Path

# Build paths
BASE_DIR = Path(__file__).resolve().parent.parent

# ==============================================================================
# üîí SECURITY SETTINGS (–í–ê–ñ–ù–û!)
# ==============================================================================

# ‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π –∫–ª—é—á –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ.
# –≠—Ç–æ—Ç –∫–ª—é—á –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Railway.
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-auth-only-key-12345')

# üö´ DEBUG –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å False –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
DEBUG = os.environ.get('DEBUG', 'False').lower() == 'true'

# üåê –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ö–æ—Å—Ç—ã
# –î–æ–±–∞–≤–ª–µ–Ω—ã –¥–æ–º–µ–Ω—ã –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∏ –±—ç–∫–µ–Ω–¥–∞ –Ω–∞ Railway.
ALLOWED_HOSTS = [
    'workerproject-production.up.railway.app', # –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    'dubai.up.railway.app',                    # –î–æ–º–µ–Ω –±—ç–∫–µ–Ω–¥–∞
    '.railway.app',                            # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –ø–æ–¥–¥–æ–º–µ–Ω—ã railway.app
    'localhost',
    '127.0.0.1',
]

# ==============================================================================
# CORE DJANGO SETTINGS
# ==============================================================================

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', # –ù–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è whitenoise
    'corsheaders',
    'rest_framework',
    'rest_framework_simplejwt',
    'whitenoise.runserver_nostatic',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware', # –í–∞–∂–Ω–æ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    'whitenoise.middleware.WhiteNoiseMiddleware',    # –î–ª—è —Ä–∞–∑–¥–∞—á–∏ —Å—Ç–∞—Ç–∏–∫–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
]

ROOT_URLCONF = 'realty.urls_simple'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'realty.wsgi.application'

# ==============================================================================
# DATABASE
# ==============================================================================
import dj_database_url

_db_url = os.environ.get('DATABASE_URL')
if _db_url:
    DATABASES = {
        'default': dj_database_url.parse(_db_url, conn_max_age=600),
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'auth.sqlite3',
        }
    }

# ==============================================================================
# API, JWT & CORS
# ==============================================================================

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

from datetime import timedelta
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
}

# üîí –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º CORS —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞—à–µ–≥–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOWED_ORIGINS = [
    'https://workerproject-production.up.railway.app',
]
CORS_ALLOW_CREDENTIALS = True

# ==============================================================================
# EXTERNAL SERVICES (Google, Email)
# ==============================================================================

GOOGLE_OAUTH_CLIENT_ID = os.environ.get('GOOGLE_CLIENT_ID', 'test-client-id')
GOOGLE_OAUTH_CLIENT_SECRET = os.environ.get('GOOGLE_CLIENT_SECRET', 'test-secret')
FRONTEND_URL = os.environ.get('FRONTEND_URL', 'https://workerproject-production.up.railway.app')

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.environ.get('EMAIL_HOST', 'mail.kabalod.online')
EMAIL_PORT = int(os.environ.get('EMAIL_PORT', '587'))
EMAIL_USE_TLS = os.environ.get('EMAIL_USE_TLS', 'True').lower() == 'true'
EMAIL_USE_SSL = os.environ.get('EMAIL_USE_SSL', 'False').lower() == 'true'
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', 'noreply@kabalod.online')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD', '')
DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL', 'Dubai Real Estate <noreply@kabalod.online>')

if not EMAIL_HOST_PASSWORD:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# ==============================================================================
# STATIC FILES & I18N
# ==============================================================================

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
