# MVP Dockerfile –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API —Å–µ—Ä–≤–∏—Å–∞
FROM python:3.12-slim

WORKDIR /app

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN apt-get update && apt-get install -y \
    curl \
    gcc \
    python3-dev \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ requirements –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
COPY . .

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
RUN mkdir -p /shared-data \
    && mkdir -p /app/logs \
    && mkdir -p /app/media \
    && mkdir -p /app/static

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
RUN useradd --create-home --shell /bin/bash --uid 1000 app \
    && chown -R app:app /app \
    && chown -R app:app /shared-data

# Entrypoint script –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
echo "üöÄ Starting Django API service..."\n\
\n\
# Wait for database\n\
echo "‚è≥ Waiting for database..."\n\
while ! python -c "import psycopg2; psycopg2.connect(\"$DATABASE_URL\")" 2>/dev/null; do\n\
    echo "Database not ready, waiting..."\n\
    sleep 2\n\
done\n\
echo "‚úÖ Database is ready"\n\
\n\
# Run migrations\n\
echo "üìä Running database migrations..."\n\
python manage.py migrate --noinput\n\
\n\
# Collect static files\n\
echo "üìÅ Collecting static files..."\n\
python manage.py collectstatic --noinput\n\
\n\
# Create superuser if needed (only in development)\n\
if [ "$DEBUG" = "1" ]; then\n\
    echo "üë§ Creating superuser (if not exists)..."\n\
    python manage.py shell -c "\
from django.contrib.auth.models import User;\
if not User.objects.filter(username=\"admin\").exists():\
    User.objects.create_superuser(\"admin\", \"admin@example.com\", \"admin\")\
    print(\"Superuser created: admin/admin\")\
else:\
    print(\"Superuser already exists\")\
"\n\
fi\n\
\n\
echo "‚úÖ Django API service ready"\n\
exec "$@"' > /app/entrypoint.sh \
    && chmod +x /app/entrypoint.sh \
    && chown app:app /app/entrypoint.sh

USER app

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/api/health/ || exit 1

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
EXPOSE 8000
ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]