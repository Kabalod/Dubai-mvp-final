name: Frontend CI

on:
  push:
    branches: ["feat/**", "prod"]
    paths:
      - "apps/DXB-frontend-develop/**"
      - "package.json"
      - "pnpm-lock.yaml"
      - "yarn.lock"
      - "package-lock.json"
      - ".github/workflows/frontend-ci.yml"
  pull_request:
    branches: ["prod", "feat/**"]
    paths:
      - "apps/DXB-frontend-develop/**"
      - "package.json"
      - "pnpm-lock.yaml"
      - "yarn.lock"
      - "package-lock.json"

jobs:
  build-and-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/DXB-frontend-develop

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: |
            apps/DXB-frontend-develop/package-lock.json
            package-lock.json

      - name: Restore Vite cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.vite
            apps/DXB-frontend-develop/node_modules/.cache
          key: vite-${{ runner.os }}-${{ hashFiles('apps/DXB-frontend-develop/**/package-lock.json') }}-${{ hashFiles('apps/DXB-frontend-develop/**/tsconfig.json') }}
          restore-keys: |
            vite-${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npx tsc --noEmit

      - name: Lint
        run: npx eslint . --ext .ts,.tsx

      - name: Build
        env:
          VITE_API_BASE_URL: http://localhost:8000
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: apps/DXB-frontend-develop/dist
          if-no-files-found: error

name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/DXB-frontend-develop/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'apps/DXB-frontend-develop/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./apps/DXB-frontend-develop

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'apps/DXB-frontend-develop/package-lock.json'

      - name: Install dependencies
        run: npm install

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test -- --watch=false
