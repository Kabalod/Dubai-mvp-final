name: Documentation Quality Check

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'scripts/**'
      - '.github/workflows/docs-check.yml'
      - '.pre-commit-config.yaml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'scripts/**'
      - '.github/workflows/docs-check.yml'
      - '.pre-commit-config.yaml'

jobs:
  docs-lint:
    name: Documentation Linting
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
          
      - name: Install Node.js dependencies
        run: |
          npm install -g markdownlint-cli
          npm install -g markdown-link-check
          
      - name: Install pre-commit hooks
        run: |
          pre-commit install
          pre-commit install --hook-type pre-push
          
      - name: Run pre-commit on all files
        run: |
          pre-commit run --all-files
          
      - name: Run documentation linting
        run: |
          chmod +x docs/lint-docs.ps1
          pwsh docs/lint-docs.ps1 -Verbose
          
      - name: Check project structure
        run: |
          chmod +x scripts/check-project-structure.ps1
          pwsh scripts/check-project-structure.ps1 -Verbose
          
      - name: Check environment variables
        run: |
          chmod +x scripts/check-env.ps1
          pwsh scripts/check-env.ps1 -Verbose

  docs-quality:
    name: Documentation Quality
    runs-on: ubuntu-latest
    needs: docs-lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pymdown-extensions
          pip install markdown
          
      - name: Check documentation coverage
        run: |
          python scripts/check-docs-coverage.py
          
      - name: Validate links
        run: |
          python scripts/validate-links.py
          
      - name: Check formatting
        run: |
          python scripts/check-formatting.py

  docs-build:
    name: Documentation Build
    runs-on: ubuntu-latest
    needs: [docs-lint, docs-quality]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs
          pip install mkdocs-material
          pip install pymdown-extensions
          
      - name: Build documentation
        run: |
          mkdocs build --strict
          
      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: site/
          
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

  docs-report:
    name: Documentation Report
    runs-on: ubuntu-latest
    needs: [docs-lint, docs-quality, docs-build]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Generate documentation report
        run: |
          python scripts/generate-docs-report.py
          
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: documentation-report
          path: docs-report.html
          
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('docs-report.html', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ“š Documentation Quality Report\n\n${report}`
            });
