version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: ./apps/DXB-frontend-develop
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=${RAILWAY_STATIC_URL}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Service
  api:
    build:
      context: ./apps/realty-main
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=0
      - DJANGO_ALLOWED_HOSTS=${RAILWAY_STATIC_URL},localhost,127.0.0.1
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - CORS_ALLOWED_ORIGINS=${RAILWAY_STATIC_URL},http://localhost:3000
      - LOG_LEVEL=INFO
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 15s
      retries: 5
    depends_on:
      - postgres

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-dubai_realty}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
